[2025-06-13 23:53:37] Checking for latest BlueLab ISO...
[2025-06-13 23:53:37]  BlueLab recipe found
[2025-06-13 23:53:37] === Testing VM Deployment Scenario: minimal ===
[2025-06-13 23:53:37] Generating iVentoy config for scenario: minimal
[2025-06-13 23:53:37] iVentoy config generated: ./test-logs/iventoy-minimal.json

MANUAL TEST STEPS FOR SCENARIO: minimal
========================================

1. VM Setup:
   - Create new VM (4GB RAM, 60GB disk, 2 CPU)
   - Configure network (NAT or bridged)
   - Boot from iVentoy with generated config

2. Parameters for this test:
   bluelab.username=testuser bluelab.password=testpass123

3. Monitor during boot:
   - Watch for first-boot service startup
   - Monitor logs: journalctl -fu bluelab-first-boot
   - Note any error messages

4. Validation checklist:
   [ ] First-boot service runs without errors
   [ ] User account created successfully
   [ ] Network configuration completed
   [ ] Docker services deployed
   [ ] Web interfaces accessible
   [ ] Completion marker created: /var/lib/bluelab/.first-boot-complete

5. Test accessibility:
   [ ] http://bluelab.local:3000 (Homepage)
   [ ] http://bluelab.local:5001 (Dockge)
   [ ] Services respond correctly
   [ ] No error messages in logs

6. Post-reboot test:
   [ ] Reboot VM
   [ ] Services start automatically
   [ ] First-boot does not re-run
   [ ] Web interfaces still accessible

RECORD RESULTS IN: ./test-logs/test-results-20250613-235337.log

[2025-06-13 23:53:37] Simulating health check for scenario: minimal

HEALTH CHECK SIMULATION - minimal
====================================

Services to verify:
- Homepage (port 3000): [ ] UP [ ] DOWN
- Dockge (port 5001): [ ] UP [ ] DOWN
- Docker daemon: [ ] RUNNING [ ] STOPPED

System status:
- Disk usage: [ ] <80% [ ] >80%
- Memory usage: [ ] <80% [ ] >80%
- CPU load: [ ] <2.0 [ ] >2.0

Network connectivity:
- Internet access: [ ] YES [ ] NO
- DNS resolution: [ ] YES [ ] NO
- Local hostname: [ ] RESOLVES [ ] FAILS


[2025-06-13 23:53:37] === Testing VM Deployment Scenario: edge-case ===
[2025-06-13 23:53:37] Generating iVentoy config for scenario: edge-case
[2025-06-13 23:53:37] iVentoy config generated: ./test-logs/iventoy-edge-case.json

MANUAL TEST STEPS FOR SCENARIO: edge-case
========================================

1. VM Setup:
   - Create new VM (4GB RAM, 60GB disk, 2 CPU)
   - Configure network (NAT or bridged)
   - Boot from iVentoy with generated config

2. Parameters for this test:
   bluelab.username=test@user bluelab.password='p@ss w0rd!' bluelab.timezone=Invalid/Zone

3. Monitor during boot:
   - Watch for first-boot service startup
   - Monitor logs: journalctl -fu bluelab-first-boot
   - Note any error messages

4. Validation checklist:
   [ ] First-boot service runs without errors
   [ ] User account created successfully
   [ ] Network configuration completed
   [ ] Docker services deployed
   [ ] Web interfaces accessible
   [ ] Completion marker created: /var/lib/bluelab/.first-boot-complete

5. Test accessibility:
   [ ] http://bluelab.local:3000 (Homepage)
   [ ] http://bluelab.local:5001 (Dockge)
   [ ] Services respond correctly
   [ ] No error messages in logs

6. Post-reboot test:
   [ ] Reboot VM
   [ ] Services start automatically
   [ ] First-boot does not re-run
   [ ] Web interfaces still accessible

RECORD RESULTS IN: ./test-logs/test-results-20250613-235337.log

[2025-06-13 23:53:37] Simulating health check for scenario: edge-case

HEALTH CHECK SIMULATION - edge-case
====================================

Services to verify:
- Homepage (port 3000): [ ] UP [ ] DOWN
- Dockge (port 5001): [ ] UP [ ] DOWN
- Docker daemon: [ ] RUNNING [ ] STOPPED

System status:
- Disk usage: [ ] <80% [ ] >80%
- Memory usage: [ ] <80% [ ] >80%
- CPU load: [ ] <2.0 [ ] >2.0

Network connectivity:
- Internet access: [ ] YES [ ] NO
- DNS resolution: [ ] YES [ ] NO
- Local hostname: [ ] RESOLVES [ ] FAILS


[2025-06-13 23:53:37] === Testing VM Deployment Scenario: interactive ===
[2025-06-13 23:53:37] Generating iVentoy config for scenario: interactive
[2025-06-13 23:53:37] iVentoy config generated: ./test-logs/iventoy-interactive.json

MANUAL TEST STEPS FOR SCENARIO: interactive
========================================

1. VM Setup:
   - Create new VM (4GB RAM, 60GB disk, 2 CPU)
   - Configure network (NAT or bridged)
   - Boot from iVentoy with generated config

2. Parameters for this test:
   

3. Monitor during boot:
   - Watch for first-boot service startup
   - Monitor logs: journalctl -fu bluelab-first-boot
   - Note any error messages

4. Validation checklist:
   [ ] First-boot service runs without errors
   [ ] User account created successfully
   [ ] Network configuration completed
   [ ] Docker services deployed
   [ ] Web interfaces accessible
   [ ] Completion marker created: /var/lib/bluelab/.first-boot-complete

5. Test accessibility:
   [ ] http://bluelab.local:3000 (Homepage)
   [ ] http://bluelab.local:5001 (Dockge)
   [ ] Services respond correctly
   [ ] No error messages in logs

6. Post-reboot test:
   [ ] Reboot VM
   [ ] Services start automatically
   [ ] First-boot does not re-run
   [ ] Web interfaces still accessible

RECORD RESULTS IN: ./test-logs/test-results-20250613-235337.log

[2025-06-13 23:53:37] Simulating health check for scenario: interactive

HEALTH CHECK SIMULATION - interactive
====================================

Services to verify:
- Homepage (port 3000): [ ] UP [ ] DOWN
- Dockge (port 5001): [ ] UP [ ] DOWN
- Docker daemon: [ ] RUNNING [ ] STOPPED

System status:
- Disk usage: [ ] <80% [ ] >80%
- Memory usage: [ ] <80% [ ] >80%
- CPU load: [ ] <2.0 [ ] >2.0

Network connectivity:
- Internet access: [ ] YES [ ] NO
- DNS resolution: [ ] YES [ ] NO
- Local hostname: [ ] RESOLVES [ ] FAILS


[2025-06-13 23:53:37] === Testing VM Deployment Scenario: full ===
[2025-06-13 23:53:37] Generating iVentoy config for scenario: full
[2025-06-13 23:53:37] iVentoy config generated: ./test-logs/iventoy-full.json

MANUAL TEST STEPS FOR SCENARIO: full
========================================

1. VM Setup:
   - Create new VM (4GB RAM, 60GB disk, 2 CPU)
   - Configure network (NAT or bridged)
   - Boot from iVentoy with generated config

2. Parameters for this test:
   bluelab.username=admin bluelab.password=secure123 bluelab.hostname=bluelab-test bluelab.timezone=America/New_York bluelab.stacks=monitoring,media

3. Monitor during boot:
   - Watch for first-boot service startup
   - Monitor logs: journalctl -fu bluelab-first-boot
   - Note any error messages

4. Validation checklist:
   [ ] First-boot service runs without errors
   [ ] User account created successfully
   [ ] Network configuration completed
   [ ] Docker services deployed
   [ ] Web interfaces accessible
   [ ] Completion marker created: /var/lib/bluelab/.first-boot-complete

5. Test accessibility:
   [ ] http://bluelab.local:3000 (Homepage)
   [ ] http://bluelab.local:5001 (Dockge)
   [ ] Services respond correctly
   [ ] No error messages in logs

6. Post-reboot test:
   [ ] Reboot VM
   [ ] Services start automatically
   [ ] First-boot does not re-run
   [ ] Web interfaces still accessible

RECORD RESULTS IN: ./test-logs/test-results-20250613-235337.log

[2025-06-13 23:53:37] Simulating health check for scenario: full

HEALTH CHECK SIMULATION - full
====================================

Services to verify:
- Homepage (port 3000): [ ] UP [ ] DOWN
- Dockge (port 5001): [ ] UP [ ] DOWN
- Docker daemon: [ ] RUNNING [ ] STOPPED

System status:
- Disk usage: [ ] <80% [ ] >80%
- Memory usage: [ ] <80% [ ] >80%
- CPU load: [ ] <2.0 [ ] >2.0

Network connectivity:
- Internet access: [ ] YES [ ] NO
- DNS resolution: [ ] YES [ ] NO
- Local hostname: [ ] RESOLVES [ ] FAILS


[2025-06-13 23:53:37] Generating comprehensive test report...

BLUELAB VM TESTING SUMMARY
==========================
Date: Fri Jun 13 11:53:37 PM CDT 2025
Test scenarios: minimal edge-case interactive full

NEXT STEPS:
1. Execute manual tests for each scenario
2. Document pass/fail results in this file
3. Report any issues found
4. Update automation based on findings

TEST ARTIFACTS:
- Results file: ./test-logs/test-results-20250613-235337.log
- iVentoy configs: ./test-logs/iventoy-*.json
- Test logs: ./test-logs/

